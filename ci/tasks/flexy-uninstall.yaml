apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: flexy-uninstall
spec:
  workspaces:
  - name: flexy-secrets
  - name: install-dir
  params:
  - name: CLUSTER_NAME
    type: string
    description: Cluster name
  steps:
    - name: uninstall
      image: docker-registry.upshift.redhat.com/flexy/ocp4:v1.8
      workingDir: /mnt
      script: |
        #!/usr/bin/env bash

        if [ ! -d "$(workspaces.install-dir.path)/$(params.CLUSTER_NAME)" ]; then
          echo "Directory \"$(params.CLUSTER_NAME)\" does not exist. List of existing directories:"
          ls "$(workspaces.install-dir.path)" | grep -v "lost+found"
          exit 1
        fi

        while read line; do
          if [ -z "$line" ]; then continue; fi
          export "$line"
        done < $(workspaces.flexy-secrets.path)/ENVIRONMENT

        while read line; do
          if [ -z "$line" ]; then continue; fi
          export "$line"
        done < $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/envvars

        echo "Preparing environment variables and secrets"
        mkdir config
        if [[ "$VARIABLES_LOCATION" == *-on-aws* || "$VARIABLES_LOCATION" == *-on-osp* ]]; then
          cp $(workspaces.flexy-secrets.path)/config.yaml config/
          cp $(workspaces.flexy-secrets.path)/psi-pipelines-shared.pem config/
          cp $(workspaces.flexy-secrets.path)/psi-pipelines-shared.pub config/
          cp $(workspaces.flexy-secrets.path)/awscreds config/
          cp $(workspaces.flexy-secrets.path)/pull-secret config/
        else 
          echo "Only AWS and PSI templates are supported."
          exit 2
        fi

        # workaround for handling certificate of gitlab.cee.redhat.com
        git config --global http."https://gitlab.cee.redhat.com/".sslCAInfo /etc/pki/ca-trust/source/anchors/RH-IT-Root-CA.crt

        cp $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/installer-artifacts.zip .

        if [[ -z `zip -sf $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/installer-artifacts.zip | grep fips_info`
          &&  "$VARIABLES_LOCATION" == *-on-osp* ]]; then
          echo "File fips_info not found which indicates that no resources were created during installation. Skipping uninstallation script."
        else
          echo "Running uninstallation script"
          ret=0
          /usr/local/bin/install_entrypoint.sh destroy || ret=$?
        fi
        
        if [ $ret == 0 ]; then
          echo -e "\nRemoving directory $(params.CLUSTER_NAME)"
          rm -rf $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)
        fi
        exit $ret       
      volumeMounts:
      - name: flexy-output
        mountPath: /mnt
  volumes:
  - name: flexy-output
    emptyDir: {}
