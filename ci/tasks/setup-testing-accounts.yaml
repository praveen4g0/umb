apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: setup-testing-accounts
spec:
  workspaces:
    - name: install-dir
      mountPath: "/install-dir"
      readOnly: true
    - name: plumbing-git
      mountPath: "/plumbing"
  params:
    - name: CLUSTER_NAME
      type: string
      description: cluster name
  steps:
    - name: setup-testing-accounts
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
      workingDir: "/plumbing"
      script: |
          #!/usr/bin/env bash
          set -e -u -o pipefail

          APISERVER=$(cat $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/auth/api-url)
          oc login -u kubeadmin -p $(cat $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/auth/kubeadmin-password) $APISERVER --insecure-skip-tls-verify=true
          CONSOLE_URL="https://$(oc get route console -n openshift-console -o jsonpath={.spec.host})"

          config/auth/01-test-auth.sh

          echo -e "\nLogin into PSI cluster using this command: 'oc login -u kubeadmin -p $(cat $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/auth/kubeadmin-password) $APISERVER --insecure-skip-tls-verify=true'"
          echo "Access the OpenShift web-console here: https://$(oc get route console -n openshift-console -o jsonpath={.spec.host})"

          echo -e "Use one of the following users to login:\n"
          echo "Username           | Password                | Cluster roles "
          echo "-------------------|-----------------------------------------"
          echo "kubeadmin          | $(cat $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/auth/kubeadmin-password) | admin"
          echo "consoledeveloper   | developer               | self-provisioner, view    "
          echo "pipelinesdeveloper | developer               | basic-user                "
          echo "user               | user                    | default                   "
          echo "user1              | user1                   | default                   "
          echo "...                | ...                     | ...                       "
          echo "user9              | user9                   | default                   "
          if [ -f $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/users.spec ]; then
            FILE=$(cat $(workspaces.install-dir.path)/$(params.CLUSTER_NAME)/users.spec)
            USERS=($(echo $FILE | tr "," "\n"))

            for I in $(seq 0 9); do
              echo "$(echo ${USERS[$I]} |cut -d':' -f1)         | $(echo ${USERS[$I]} |cut -d':' -f2)            | default"
            done
          fi
          echo "-------------------------------------------------------------"